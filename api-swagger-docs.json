{
  "openapi": "3.0.0",
  "info": {
    "title": "My Doctor API",
    "description": "My Doctor API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Task Id"
          },
          "title": {
            "type": "string",
            "description": "Task title"
          },
          "description": {
            "type": "string",
            "description": "Task description"
          },
          "status": {
            "type": "string",
            "description": "Task status"
          },
          "userId": {
            "type": "number",
            "description": "Task user Id"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "status",
          "userId"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of task"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title"
          },
          "description": {
            "type": "string",
            "description": "Task description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "SignUpDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User Name"
          },
          "password": {
            "type": "string",
            "description": "User Password"
          },
          "role": {
            "type": "string",
            "description": "Role of user"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "fullname": {
            "type": "string",
            "description": "Full Name"
          },
          "signupReferralCode": {
            "type": "string",
            "description": "Referral Code. If it is valid it will be linked with account."
          }
        },
        "required": [
          "username",
          "password",
          "role",
          "fullname"
        ]
      },
      "CurrentUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "fullname",
          "role"
        ]
      },
      "VerifyAccountDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User Name"
          },
          "verificationCode": {
            "type": "string",
            "description": "Verification code/OTP"
          }
        },
        "required": [
          "username",
          "verificationCode"
        ]
      },
      "AuthCredentialDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User Name"
          },
          "password": {
            "type": "string",
            "description": "User Password"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "JwtToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "UserNameDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User Name"
          }
        },
        "required": [
          "username"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "New Password"
          },
          "passwordRestCode": {
            "type": "string",
            "description": "Password reset code"
          }
        },
        "required": [
          "password",
          "passwordRestCode"
        ]
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "fullname": {
            "type": "string",
            "description": "Full Name"
          },
          "gender": {
            "type": "number",
            "description": "Gender ID"
          },
          "streetAddress": {
            "type": "string",
            "description": "Street Address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "lat": {
            "type": "string",
            "description": "Latitude"
          },
          "lon": {
            "type": "string",
            "description": "Longitude"
          }
        },
        "required": [
          "fullname",
          "gender",
          "streetAddress",
          "city",
          "postalCode",
          "state",
          "country",
          "lat",
          "lon"
        ]
      },
      "GetManyUserResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "DeviceTokenDto": {
        "type": "object",
        "properties": {
          "deviceToken": {
            "type": "string",
            "description": "Device Token."
          }
        },
        "required": [
          "deviceToken"
        ]
      },
      "UpdateResult": {
        "type": "object",
        "properties": {}
      },
      "PatientProfileDto": {
        "type": "object",
        "properties": {
          "userIdTypeId": {
            "type": "number",
            "description": "Type of User ID (Aadhar, PAN etc.)"
          },
          "userIdNumber": {
            "type": "string",
            "description": "User ID Number (Aadhar, PAN etc.)"
          },
          "height": {
            "type": "string",
            "description": "Height"
          },
          "weight": {
            "type": "string",
            "description": "Weight"
          },
          "clinicalNotes": {
            "type": "string",
            "description": "Clinical Notes"
          }
        }
      },
      "PatientProfile": {
        "type": "object",
        "properties": {}
      },
      "GetManyReferralCodeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralCode"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "ReferralCode": {
        "type": "object",
        "properties": {}
      },
      "SupportDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "From email address"
          },
          "fullname": {
            "type": "string",
            "description": "From email address"
          },
          "message": {
            "type": "string",
            "description": "Support message"
          }
        },
        "required": [
          "fullname",
          "message"
        ]
      },
      "InviteUserDto": {
        "type": "object",
        "properties": {
          "toEmail": {
            "type": "string",
            "description": "To email address"
          },
          "toPhone": {
            "type": "string",
            "description": "To email address"
          },
          "message": {
            "type": "string",
            "description": "Invitation Message"
          }
        },
        "required": [
          "toEmail",
          "toPhone",
          "message"
        ]
      },
      "GetManyInvitationResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Invitation": {
        "type": "object",
        "properties": {}
      },
      "GetManyNotificationResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notification Message"
          },
          "type": {
            "type": "string",
            "description": "Notification Type"
          }
        },
        "required": [
          "message",
          "type"
        ]
      },
      "CreateManyNotificationDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "CreateReferralCodekDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "number",
            "description": "User/Owner ID"
          },
          "level": {
            "type": "number",
            "description": "Task description"
          }
        },
        "required": [
          "ownerId",
          "level"
        ]
      },
      "CreateMedicalCouncilDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyMedicalCouncilResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MedicalCouncil"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "MedicalCouncil": {
        "type": "object",
        "properties": {}
      },
      "CreateQualificationlDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyQualificationResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Qualification"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Qualification": {
        "type": "object",
        "properties": {}
      },
      "CreateSpecialitylDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManySpecialityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Speciality"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Speciality": {
        "type": "object",
        "properties": {}
      },
      "CreateUserIdTypeDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyUserIdTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIdType"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "UserIdType": {
        "type": "object",
        "properties": {}
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyOrganizationResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {}
      },
      "CreateImaBrachDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyImaBranchResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImaBranch"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "ImaBranch": {
        "type": "object",
        "properties": {}
      },
      "CreateConsultationtypeDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GetManyConsultationTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsultationType"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "ConsultationType": {
        "type": "object",
        "properties": {}
      },
      "UIDropDownTypes": {
        "type": "object",
        "properties": {
          "medicalCouncils": {
            "description": "Medical Councils",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imaBranches": {
            "description": "IMA Branches",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "consultationTypes": {
            "description": "Consultation Types",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizations": {
            "description": "Organizations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qualifications": {
            "description": "Qualifications",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specialities": {
            "description": "Specialities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userIdTypes": {
            "description": "User ID Types",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "genders": {
            "description": "Genders",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "medicalCouncils",
          "imaBranches",
          "consultationTypes",
          "organizations",
          "qualifications",
          "specialities",
          "userIdTypes",
          "genders"
        ]
      },
      "ConfigResponse": {
        "type": "object",
        "properties": {
          "configs": {
            "type": "object",
            "description": "Configuration Array"
          }
        },
        "required": [
          "configs"
        ]
      },
      "AdminSignUpdto": {
        "type": "object",
        "properties": {
          "fullname": {
            "type": "string",
            "description": "Full Name"
          },
          "gender": {
            "type": "number",
            "description": "Gender ID"
          },
          "streetAddress": {
            "type": "string",
            "description": "Street Address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "lat": {
            "type": "string",
            "description": "Latitude"
          },
          "lon": {
            "type": "string",
            "description": "Longitude"
          },
          "username": {
            "type": "string",
            "description": "User Name"
          },
          "password": {
            "type": "string",
            "description": "User Password"
          },
          "role": {
            "type": "string",
            "description": "Role of user"
          },
          "email": {
            "type": "string",
            "description": "Email"
          }
        },
        "required": [
          "fullname",
          "gender",
          "streetAddress",
          "city",
          "postalCode",
          "state",
          "country",
          "lat",
          "lon",
          "username",
          "password",
          "role",
          "email"
        ]
      },
      "DoctorProfileDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "The user ID who owns the doctor profile"
          },
          "id": {
            "type": "number",
            "description": "Doctor profile ID (different than user ID"
          },
          "medicalCouncilId": {
            "type": "number",
            "description": "Medical Council ID"
          },
          "medicalRegistrationNumber": {
            "type": "string",
            "description": "Medical Registration ID"
          },
          "organizationId": {
            "type": "number",
            "description": "Organization ID"
          },
          "imaBranchId": {
            "type": "number",
            "description": "Branch ID"
          },
          "userIdTypeId": {
            "type": "number",
            "description": "Type of User ID (Aadhar, PAN etc.)"
          },
          "userIdNumber": {
            "type": "string",
            "description": "User ID Number (Aadhar, PAN etc.)"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "keywords": {
            "type": "string",
            "description": "Keywords (Comma separated)"
          }
        },
        "required": [
          "userId",
          "id",
          "medicalCouncilId",
          "medicalRegistrationNumber",
          "organizationId",
          "imaBranchId",
          "userIdTypeId",
          "userIdNumber",
          "description",
          "keywords"
        ]
      },
      "OptionItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Option Id"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "UpdatProfileOptionDto": {
        "type": "object",
        "properties": {
          "entries": {
            "description": "List of IDs (e.g. qualificationId, sepcialityId) and description",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionItems"
            }
          }
        },
        "required": [
          "entries"
        ]
      },
      "GetManyDoctorProfileResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoctorProfile"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "DoctorProfile": {
        "type": "object",
        "properties": {}
      },
      "DeleteResult": {
        "type": "object",
        "properties": {}
      },
      "UpdateConsultationItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Option Id"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "recordId": {
            "type": "number",
            "description": "Record ID to be updated"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "Start Time"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "End Time"
          },
          "fees": {
            "type": "number",
            "description": "Consultation Fees"
          }
        },
        "required": [
          "id",
          "description",
          "startTime",
          "endTime",
          "fees"
        ]
      },
      "UpdateConsultationTypeDto": {
        "type": "object",
        "properties": {
          "entries": {
            "description": "List of consultations IDs and start/end times",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateConsultationItem"
            }
          }
        },
        "required": [
          "entries"
        ]
      },
      "UpdateInviteStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Invitation ID"
          },
          "status": {
            "type": "string",
            "description": "New status to be set"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "SiteStats": {
        "type": "object",
        "properties": {
          "doctors": {
            "type": "number",
            "description": "Number of doctors"
          },
          "users": {
            "type": "number",
            "description": "Number of users"
          },
          "providers": {
            "type": "number",
            "description": "Number of providers"
          },
          "completedAppointments": {
            "type": "number",
            "description": "Number of completed (COMPLETED) appointments"
          },
          "userCancelledAppointments": {
            "type": "number",
            "description": "Number of user cancelled (USER_CANCELLED) appointments"
          },
          "doctorCancelledAppointments": {
            "type": "number",
            "description": "Number of doctor cancelled (DOCTOR_CANCELLED) appointments"
          },
          "orderCreatedAppointments": {
            "type": "number",
            "description": "Number of pending (ORDER_CREATED) appointments"
          },
          "paymentReceivedAppointments": {
            "type": "number",
            "description": "Number of user paid (PAYMENT_RECEIVED) appointments"
          }
        },
        "required": [
          "doctors",
          "users",
          "providers",
          "completedAppointments",
          "userCancelledAppointments",
          "doctorCancelledAppointments",
          "orderCreatedAppointments",
          "paymentReceivedAppointments"
        ]
      },
      "UpdateAppointmentStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Appointment ID"
          },
          "status": {
            "type": "string",
            "description": "New status to be set"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "Fees": {
        "type": "object",
        "properties": {
          "basicFees": {
            "type": "number",
            "description": "Basic Fees "
          },
          "serviceCharge": {
            "type": "number",
            "description": "Service Charge"
          },
          "gst": {
            "type": "number",
            "description": "GST"
          },
          "total": {
            "type": "number",
            "description": "Total"
          }
        },
        "required": [
          "basicFees",
          "serviceCharge",
          "gst",
          "total"
        ]
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "number",
            "description": "Start Time"
          },
          "fees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Fees"
              },
              {
                "description": "Fees"
              }
            ]
          }
        },
        "required": [
          "startTime",
          "fees"
        ]
      },
      "CreateAppointmentOrderDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "Start Time"
          },
          "doctorUserId": {
            "type": "number",
            "description": "Doctor Id"
          },
          "patientUserId": {
            "type": "number",
            "description": "Patient/User ID"
          },
          "consultationId": {
            "type": "number",
            "description": "Consultation ID"
          }
        },
        "required": [
          "startTime",
          "doctorUserId",
          "patientUserId",
          "consultationId"
        ]
      },
      "CompleteOrderPaymentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order ID"
          },
          "appointmentId": {
            "type": "number",
            "description": "Appointment Id"
          },
          "doctorUserId": {
            "type": "number",
            "description": "Doctor User ID"
          }
        },
        "required": [
          "orderId",
          "appointmentId",
          "doctorUserId"
        ]
      },
      "BookAppointmentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order ID"
          },
          "paymentId": {
            "type": "string",
            "description": "Payment ID"
          }
        },
        "required": [
          "orderId",
          "paymentId"
        ]
      },
      "AppointmentFilterDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Appointment Status"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Start Date"
          },
          "limit": {
            "type": "number",
            "description": "Number of records per page"
          },
          "page": {
            "type": "number",
            "description": "Page number/offer"
          }
        },
        "required": [
          "status",
          "startDate"
        ]
      },
      "GetManyAppointmentsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointments"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "Appointments": {
        "type": "object",
        "properties": {}
      },
      "PatientFilterDto": {
        "type": "object",
        "properties": {
          "doctorUserId": {
            "type": "number",
            "description": "Doctor ID for which we need patient list"
          },
          "limit": {
            "type": "number",
            "description": "Page number/offer"
          },
          "page": {
            "type": "number",
            "description": "Page number/offer"
          }
        }
      }
    }
  },
  "paths": {
    "/rest/api/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/api/tasks": {
      "get": {
        "operationId": "TasksController_getTasks",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of task to filter e.g. OPEN, DONE, IN_PROGRESS",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search String",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "List of tasks by filter (optional)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "operationId": "TasksController_createTask",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/tasks/{id}": {
      "get": {
        "operationId": "TasksController_getTaskById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get a specific task by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "TasksController_deleteTaskById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a specific task by ID"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/tasks/{id}/status": {
      "patch": {
        "operationId": "TasksController_updateTaskById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update task status of a specific task by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sign Up for a new account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/rest/api/auth/verify": {
      "post": {
        "operationId": "AuthController_verifyAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verify accouont using OTP"
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/rest/api/auth/signin": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCredentialDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sign In API. After login it will return JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtToken"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/rest/api/auth/request-password": {
      "post": {
        "operationId": "AuthController_requestPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Forgot Passwrod API"
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/rest/api/auth/reset-password": {
      "put": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reset Passwrod API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/rest/api/auth/{id}": {
      "delete": {
        "operationId": "AuthController_deleteTaskById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a specific user by ID"
          },
          "412": {
            "description": "The user id can not be same as logged in user ID."
          }
        },
        "tags": [
          "Account"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/user-profile/create": {
      "post": {
        "operationId": "UserProfileController_createUserProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create doctor profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          }
        },
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/user-profile/detail": {
      "get": {
        "operationId": "UserProfileController_userProfileDetail",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get User Detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/user-profile/device-token": {
      "post": {
        "operationId": "UserProfileController_updateDeviceToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update device token. If a blank token is sent, existing token will be removed and no notfication will be received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        },
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/user-profile/picture": {
      "post": {
        "operationId": "UserProfileController_uploadProfileImage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update profile photo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "UserProfileController_removeProfilePhoto",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Delete profile photo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/user-profile/picture/{image}": {
      "get": {
        "operationId": "UserProfileController_getProfilePhoto",
        "parameters": [
          {
            "name": "image",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User Profile"
        ]
      }
    },
    "/rest/api/patient-profile/create": {
      "post": {
        "operationId": "PatientProfileController_createPatientProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create patient profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Patient Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/patient-profile/detail": {
      "get": {
        "operationId": "PatientProfileController_getPatientProfileDetail",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get patient profile detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Patient Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/referral/code": {
      "get": {
        "operationId": "ReferralsController_getUserReferralCode",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get user referral code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCode"
                }
              }
            }
          }
        },
        "tags": [
          "Referrals"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/referral/list": {
      "get": {
        "operationId": "ReferralsController_getUserReferralList",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get list of users who have used referrals for current logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Referrals"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/contact/support": {
      "post": {
        "operationId": "ContactsController_contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact Support"
          }
        },
        "tags": [
          "Common"
        ]
      }
    },
    "/rest/api/contact/invite": {
      "post": {
        "operationId": "ContactsController_inviteUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invite an user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/notification": {
      "post": {
        "operationId": "createOneBaseNotificationControllerNotification",
        "summary": "Create one Notification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseNotificationControllerNotification",
        "summary": "Retrieve many Notification",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyNotificationResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/notification/{id}": {
      "get": {
        "operationId": "getOneBaseNotificationControllerNotification",
        "summary": "Retrieve one Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOneBaseNotificationControllerNotification",
        "summary": "Update one Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "put": {
        "operationId": "replaceOneBaseNotificationControllerNotification",
        "summary": "Replace one Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseNotificationControllerNotification",
        "summary": "Delete one Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/notification/bulk": {
      "post": {
        "operationId": "createManyBaseNotificationControllerNotification",
        "summary": "Create many Notification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/referral-code": {
      "post": {
        "operationId": "createOneBaseReferralCodeControllerReferralCode",
        "summary": "Create one ReferralCode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReferralCodekDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCode"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseReferralCodeControllerReferralCode",
        "summary": "Retrieve many ReferralCode",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyReferralCodeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferralCode"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/referral-code/{id}": {
      "patch": {
        "operationId": "updateOneBaseReferralCodeControllerReferralCode",
        "summary": "Update one ReferralCode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCode"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseReferralCodeControllerReferralCode",
        "summary": "Delete one ReferralCode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/medical-council": {
      "post": {
        "operationId": "createOneBaseMedicalCouncilControllerMedicalCouncil",
        "summary": "Create one MedicalCouncil",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalCouncilDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCouncil"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseMedicalCouncilControllerMedicalCouncil",
        "summary": "Retrieve many MedicalCouncil",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyMedicalCouncilResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MedicalCouncil"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/medical-council/{id}": {
      "patch": {
        "operationId": "updateOneBaseMedicalCouncilControllerMedicalCouncil",
        "summary": "Update one MedicalCouncil",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalCouncil"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCouncil"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseMedicalCouncilControllerMedicalCouncil",
        "summary": "Delete one MedicalCouncil",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/qualifications": {
      "post": {
        "operationId": "createOneBaseQualificationControllerQualification",
        "summary": "Create one Qualification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQualificationlDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Qualification"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseQualificationControllerQualification",
        "summary": "Retrieve many Qualification",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyQualificationResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Qualification"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/qualifications/{id}": {
      "patch": {
        "operationId": "updateOneBaseQualificationControllerQualification",
        "summary": "Update one Qualification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qualification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Qualification"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseQualificationControllerQualification",
        "summary": "Delete one Qualification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/specialities": {
      "post": {
        "operationId": "createOneBaseSpecialityControllerSpeciality",
        "summary": "Create one Speciality",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpecialitylDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Speciality"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseSpecialityControllerSpeciality",
        "summary": "Retrieve many Speciality",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManySpecialityResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Speciality"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/specialities/{id}": {
      "patch": {
        "operationId": "updateOneBaseSpecialityControllerSpeciality",
        "summary": "Update one Speciality",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Speciality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Speciality"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseSpecialityControllerSpeciality",
        "summary": "Delete one Speciality",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/userid-type": {
      "post": {
        "operationId": "createOneBaseUserIdTypeControllerUserIdType",
        "summary": "Create one UserIdType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserIdTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdType"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseUserIdTypeControllerUserIdType",
        "summary": "Retrieve many UserIdType",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyUserIdTypeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserIdType"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/userid-type/{id}": {
      "patch": {
        "operationId": "updateOneBaseUserIdTypeControllerUserIdType",
        "summary": "Update one UserIdType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdType"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseUserIdTypeControllerUserIdType",
        "summary": "Delete one UserIdType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/organization": {
      "post": {
        "operationId": "createOneBaseOrganizationControllerOrganization",
        "summary": "Create one Organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseOrganizationControllerOrganization",
        "summary": "Retrieve many Organization",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyOrganizationResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/organization/{id}": {
      "patch": {
        "operationId": "updateOneBaseOrganizationControllerOrganization",
        "summary": "Update one Organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseOrganizationControllerOrganization",
        "summary": "Delete one Organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/ima-branch": {
      "post": {
        "operationId": "createOneBaseImaBranchControllerImaBranch",
        "summary": "Create one ImaBranch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateImaBrachDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImaBranch"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseImaBranchControllerImaBranch",
        "summary": "Retrieve many ImaBranch",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyImaBranchResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImaBranch"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/ima-branch/{id}": {
      "patch": {
        "operationId": "updateOneBaseImaBranchControllerImaBranch",
        "summary": "Update one ImaBranch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImaBranch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImaBranch"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseImaBranchControllerImaBranch",
        "summary": "Delete one ImaBranch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/consultation": {
      "post": {
        "operationId": "createOneBaseConsultationTypeControllerConsultationType",
        "summary": "Create one ConsultationType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultationtypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationType"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseConsultationTypeControllerConsultationType",
        "summary": "Retrieve many ConsultationType",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyConsultationTypeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConsultationType"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/consultation/{id}": {
      "patch": {
        "operationId": "updateOneBaseConsultationTypeControllerConsultationType",
        "summary": "Update one ConsultationType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationType"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseConsultationTypeControllerConsultationType",
        "summary": "Delete one ConsultationType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/common": {
      "get": {
        "operationId": "CommonDataController_getDataTypes",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Commond values needed for UI",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIDropDownTypes"
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/common/configs": {
      "get": {
        "operationId": "CommonDataController_getConfigs",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Configuration Value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account": {
      "post": {
        "operationId": "createOneBaseUserAccountAdminControllerUser",
        "summary": "Create one User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSignUpdto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseUserAccountAdminControllerUser",
        "summary": "Retrieve many User",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyUserResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account/{id}": {
      "patch": {
        "operationId": "updateOneBaseUserAccountAdminControllerUser",
        "summary": "Update one User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSignUpdto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getOneBaseUserAccountAdminControllerUser",
        "summary": "Retrieve one User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseUserAccountAdminControllerUser",
        "summary": "Delete one User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account/deactivate/{id}": {
      "patch": {
        "operationId": "UserAccountAdminController_deactivate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "De-Activate Account"
          },
          "412": {
            "description": "The user id can not be same as logged in user ID."
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account/service-provider/{signupReferralCodeId}": {
      "get": {
        "operationId": "UserAccountAdminController_getServiceProviderForUser",
        "parameters": [
          {
            "name": "signupReferralCodeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get Service provide based on given referral Code ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account/activate/{id}": {
      "patch": {
        "operationId": "UserAccountAdminController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Activate Account"
          },
          "412": {
            "description": "The user id can not be same as logged in user ID."
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/user-account/picture/{userId}": {
      "post": {
        "operationId": "UserAccountAdminController_uploadUserProfileImage",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update Doctor photo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile": {
      "post": {
        "operationId": "createOneBaseDoctorProfileAdminControllerDoctorProfile",
        "summary": "Create one DoctorProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "getManyBaseDoctorProfileAdminControllerDoctorProfile",
        "summary": "Retrieve many DoctorProfile",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyDoctorProfileResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DoctorProfile"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/update/specialities/{doctorId}": {
      "post": {
        "operationId": "DoctorProfileAdminController_updateSpecialities",
        "parameters": [
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatProfileOptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[ADMIN] Update Doctor Specialities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/delete/specialities/{doctorId}/{id}": {
      "delete": {
        "operationId": "DoctorProfileAdminController_deleteSpeciality",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "[ADMIN] Delete a Doctor Speciality",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/update/qualifications/{doctorId}": {
      "post": {
        "operationId": "DoctorProfileAdminController_updateQualifications",
        "parameters": [
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatProfileOptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[ADMIN] Update Doctor Qaliifcation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/delete/qualifications/{doctorId}/{id}": {
      "delete": {
        "operationId": "DoctorProfileAdminController_deleteQualification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "[ADMIN] Delete a Doctor Qaliifcation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/update/consultations/{doctorId}": {
      "post": {
        "operationId": "DoctorProfileAdminController_updateConsultations",
        "parameters": [
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultationTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[ADMIN] Update Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/delete/consultations/{doctorId}/{id}": {
      "delete": {
        "operationId": "DoctorProfileAdminController_deleteConsultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "doctorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "[ADMIN] Delete a Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/doctor-profile/{id}": {
      "patch": {
        "operationId": "updateOneBaseDoctorProfileAdminControllerDoctorProfile",
        "summary": "Update one DoctorProfile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseDoctorProfileAdminControllerDoctorProfile",
        "summary": "Delete one DoctorProfile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/invitation": {
      "get": {
        "operationId": "getManyBaseInvitationsControllerInvitation",
        "summary": "Retrieve many Invitation",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyInvitationResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invitation"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/invitation/change-status": {
      "patch": {
        "operationId": "InvitationsController_updateInviteStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInviteStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Change invitation status"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/referrals/list": {
      "get": {
        "operationId": "UserReferralsAdminController_getReferralsByUserId",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/referrals": {
      "get": {
        "operationId": "getManyBaseUserReferralsAdminControllerUser",
        "summary": "Retrieve many User",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyUserResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/site-info/stats": {
      "get": {
        "operationId": "SiteInfoController_getStats",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get site info with various counts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteStats"
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/appointment": {
      "get": {
        "operationId": "getManyBaseAppointmentControllerAppointments",
        "summary": "Retrieve many Appointments",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyAppointmentsResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Appointments"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/admin/appointment/change-status": {
      "patch": {
        "operationId": "AppointmentController_updateAppointmentStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Change appointment status"
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/create": {
      "post": {
        "operationId": "DoctorProfileController_createDoctorProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create doctor profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/detail": {
      "get": {
        "operationId": "DoctorProfileController_getDoctorDetail",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get User Detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/update/specialities": {
      "post": {
        "operationId": "DoctorProfileController_updateSpecialities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatProfileOptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update Doctor Specialities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/delete/specialities/{id}": {
      "delete": {
        "operationId": "DoctorProfileController_deleteSpeciality",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a Doctor Speciality",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/update/qualifications": {
      "post": {
        "operationId": "DoctorProfileController_updateQualification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatProfileOptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update Doctor Qualifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/delete/qualifications/{id}": {
      "delete": {
        "operationId": "DoctorProfileController_deleteQualification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a Doctor Qualifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/update/consultations": {
      "post": {
        "operationId": "DoctorProfileController_updateConsultation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultationTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorProfile"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/delete/consultations/{id}": {
      "delete": {
        "operationId": "DoctorProfileController_deleteConsultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/disable/consultations/{id}": {
      "patch": {
        "operationId": "DoctorProfileController_disableConsultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Disable a Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/enable/consultations/{id}": {
      "patch": {
        "operationId": "DoctorProfileController_enableConsultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Enable a Doctor Consultation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/search": {
      "get": {
        "operationId": "getManyBaseDoctorControllerUser",
        "summary": "Retrieve many User",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyUserResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/doctor-profile/search/{id}": {
      "get": {
        "operationId": "getOneBaseDoctorControllerUser",
        "summary": "Retrieve one User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Doctor Profile"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/availability/{doctorUserId}/{consultationId}/{date}": {
      "get": {
        "operationId": "AppointmentsController_getAvailableAppointments",
        "parameters": [
          {
            "name": "doctorUserId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "consultationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Doctor appointment availability by doctor ID and Consultation Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/order": {
      "post": {
        "operationId": "AppointmentsController_createAppointmentOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create an appointment order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/order/{orderId}": {
      "patch": {
        "operationId": "AppointmentsController_completeOrderPayment",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteOrderPaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment order detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "AppointmentsController_appointmentOrderDetail",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Appointment order detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/book": {
      "post": {
        "operationId": "AppointmentsController_bookAppointment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book an appointment with an order ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/user": {
      "post": {
        "operationId": "AppointmentsController_getUserAppointments",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentFilterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get patient appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointments"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/user/cancel/{appointmentId}": {
      "patch": {
        "operationId": "AppointmentsController_cancelUserAppointments",
        "parameters": [
          {
            "name": "appointmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cancel patient appointments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/doctor": {
      "post": {
        "operationId": "AppointmentsController_getDoctorAppointments",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentFilterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get doctor appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointments"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/doctor/cancel/{appointmentId}": {
      "patch": {
        "operationId": "AppointmentsController_cancelDoctorAppointments",
        "parameters": [
          {
            "name": "appointmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cancel doctor appointments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/doctor/complete/{appointmentId}": {
      "patch": {
        "operationId": "AppointmentsController_completeDoctorAppointments",
        "parameters": [
          {
            "name": "appointmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cancel doctor appointments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/rest/api/appointments/doctor/patient-list": {
      "post": {
        "operationId": "AppointmentsController_getDoctorPatients",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientFilterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get all patients for a given doctor based on past appointments.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Appointment"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      }
    }
  }
}
